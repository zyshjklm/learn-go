// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addrbookstore.proto

/*
Package rpcproto is a generated protocol buffer package.

It is generated from these files:
	addrbookstore.proto

It has these top-level messages:
	PhoneNumber
	Person
	AddrBook
	AddPersonRequest
	AddPersonResponse
*/
package rpcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PhoneType int32

const (
	PhoneType_MOBILE PhoneType = 0
	PhoneType_HOME   PhoneType = 1
	PhoneType_WORK   PhoneType = 2
)

var PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}
var PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x PhoneType) String() string {
	return proto.EnumName(PhoneType_name, int32(x))
}
func (PhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PhoneNumber struct {
	Number string    `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Type   PhoneType `protobuf:"varint,2,opt,name=type,enum=rpcproto.PhoneType" json:"type,omitempty"`
}

func (m *PhoneNumber) Reset()                    { *m = PhoneNumber{} }
func (m *PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*PhoneNumber) ProtoMessage()               {}
func (*PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *PhoneNumber) GetType() PhoneType {
	if m != nil {
		return m.Type
	}
	return PhoneType_MOBILE
}

type Person struct {
	Id     int32          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email  string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phones []*PhoneNumber `protobuf:"bytes,4,rep,name=phones" json:"phones,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Person) GetPhones() []*PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

type AddrBook struct {
	People []*Person `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *AddrBook) Reset()                    { *m = AddrBook{} }
func (m *AddrBook) String() string            { return proto.CompactTextString(m) }
func (*AddrBook) ProtoMessage()               {}
func (*AddrBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AddrBook) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

type AddPersonRequest struct {
	Person *Person `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
}

func (m *AddPersonRequest) Reset()                    { *m = AddPersonRequest{} }
func (m *AddPersonRequest) String() string            { return proto.CompactTextString(m) }
func (*AddPersonRequest) ProtoMessage()               {}
func (*AddPersonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddPersonRequest) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

// return person id
type AddPersonResponse struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *AddPersonResponse) Reset()                    { *m = AddPersonResponse{} }
func (m *AddPersonResponse) String() string            { return proto.CompactTextString(m) }
func (*AddPersonResponse) ProtoMessage()               {}
func (*AddPersonResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddPersonResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*PhoneNumber)(nil), "rpcproto.PhoneNumber")
	proto.RegisterType((*Person)(nil), "rpcproto.Person")
	proto.RegisterType((*AddrBook)(nil), "rpcproto.AddrBook")
	proto.RegisterType((*AddPersonRequest)(nil), "rpcproto.AddPersonRequest")
	proto.RegisterType((*AddPersonResponse)(nil), "rpcproto.AddPersonResponse")
	proto.RegisterEnum("rpcproto.PhoneType", PhoneType_name, PhoneType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddrBookStore service

type AddrBookStoreClient interface {
	AddPerson(ctx context.Context, in *AddPersonRequest, opts ...grpc.CallOption) (*AddPersonResponse, error)
}

type addrBookStoreClient struct {
	cc *grpc.ClientConn
}

func NewAddrBookStoreClient(cc *grpc.ClientConn) AddrBookStoreClient {
	return &addrBookStoreClient{cc}
}

func (c *addrBookStoreClient) AddPerson(ctx context.Context, in *AddPersonRequest, opts ...grpc.CallOption) (*AddPersonResponse, error) {
	out := new(AddPersonResponse)
	err := grpc.Invoke(ctx, "/rpcproto.AddrBookStore/AddPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddrBookStore service

type AddrBookStoreServer interface {
	AddPerson(context.Context, *AddPersonRequest) (*AddPersonResponse, error)
}

func RegisterAddrBookStoreServer(s *grpc.Server, srv AddrBookStoreServer) {
	s.RegisterService(&_AddrBookStore_serviceDesc, srv)
}

func _AddrBookStore_AddPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookStoreServer).AddPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcproto.AddrBookStore/AddPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookStoreServer).AddPerson(ctx, req.(*AddPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddrBookStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcproto.AddrBookStore",
	HandlerType: (*AddrBookStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPerson",
			Handler:    _AddrBookStore_AddPerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addrbookstore.proto",
}

func init() { proto.RegisterFile("addrbookstore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcb, 0x4f, 0xc2, 0x40,
	0x10, 0xc6, 0x6d, 0x29, 0x1b, 0x3a, 0x44, 0x52, 0x07, 0x35, 0x0d, 0x5e, 0x48, 0x3d, 0xd8, 0x68,
	0xe4, 0x80, 0x1e, 0xbd, 0x40, 0x24, 0xd1, 0x28, 0x8f, 0xac, 0x1a, 0xcf, 0xe0, 0x4e, 0x22, 0x01,
	0xba, 0xcb, 0x6e, 0x39, 0xf0, 0xdf, 0x9b, 0x6e, 0x0b, 0x92, 0x46, 0x4f, 0xfd, 0xe6, 0xf1, 0x9b,
	0xf9, 0xa6, 0x0b, 0xcd, 0xa9, 0x10, 0x7a, 0x26, 0xe5, 0xc2, 0xa4, 0x52, 0x53, 0x47, 0x69, 0x99,
	0x4a, 0xac, 0x69, 0xf5, 0x65, 0x55, 0x34, 0x82, 0xfa, 0xe4, 0x5b, 0x26, 0x34, 0xda, 0xac, 0x66,
	0xa4, 0xf1, 0x1c, 0x58, 0x62, 0x55, 0xe8, 0xb4, 0x9d, 0xd8, 0xe7, 0x45, 0x84, 0x57, 0xe0, 0xa5,
	0x5b, 0x45, 0xa1, 0xdb, 0x76, 0xe2, 0x46, 0xb7, 0xd9, 0xd9, 0xf1, 0x1d, 0x0b, 0xbf, 0x6f, 0x15,
	0x71, 0xdb, 0x10, 0xad, 0x81, 0x4d, 0x48, 0x1b, 0x99, 0x60, 0x03, 0xdc, 0xb9, 0xb0, 0x63, 0xaa,
	0xdc, 0x9d, 0x0b, 0x44, 0xf0, 0x92, 0xe9, 0x2a, 0x1f, 0xe1, 0x73, 0xab, 0xf1, 0x14, 0xaa, 0xb4,
	0x9a, 0xce, 0x97, 0x61, 0xc5, 0x26, 0xf3, 0x00, 0x6f, 0x81, 0xa9, 0x6c, 0xac, 0x09, 0xbd, 0x76,
	0x25, 0xae, 0x77, 0xcf, 0x4a, 0xeb, 0x72, 0xaf, 0xbc, 0x68, 0x8a, 0xee, 0xa1, 0xd6, 0x13, 0x42,
	0xf7, 0xa5, 0x5c, 0x60, 0x0c, 0x4c, 0x91, 0x54, 0x4b, 0x0a, 0x1d, 0x8b, 0x06, 0x07, 0xa8, 0xb5,
	0xc5, 0x8b, 0x7a, 0xf4, 0x00, 0x41, 0x4f, 0x88, 0x22, 0x49, 0xeb, 0x0d, 0x99, 0x34, 0xa7, 0xb3,
	0x84, 0xb5, 0xfd, 0x0f, 0x9d, 0x7d, 0xa3, 0x4b, 0x38, 0x39, 0xa0, 0x8d, 0x92, 0x89, 0xa1, 0xf2,
	0xc5, 0xd7, 0x37, 0xe0, 0xef, 0x7f, 0x0f, 0x02, 0xb0, 0xe1, 0xb8, 0xff, 0xfc, 0x3a, 0x08, 0x8e,
	0xb0, 0x06, 0xde, 0xd3, 0x78, 0x38, 0x08, 0x9c, 0x4c, 0x7d, 0x8e, 0xf9, 0x4b, 0xe0, 0x76, 0x3f,
	0xe0, 0x78, 0x77, 0xc5, 0x5b, 0xf6, 0x52, 0xf8, 0x08, 0xfe, 0x7e, 0x05, 0xb6, 0x7e, 0x9d, 0x94,
	0x5d, 0xb7, 0x2e, 0xfe, 0xac, 0xe5, 0x9e, 0x66, 0xcc, 0x16, 0xee, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x19, 0x21, 0x3f, 0xbd, 0x07, 0x02, 0x00, 0x00,
}
